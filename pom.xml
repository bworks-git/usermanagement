<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<groupId>com.osl</groupId>
	<artifactId>user-mgmt</artifactId>
	<packaging>war</packaging>
	<version>0.0.1-SNAPSHOT</version>
	<name>user-mgmt Maven Webapp</name>
	<url>http://maven.apache.org</url>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<jdk.version>1.6</jdk.version>
		<context.path>/</context.path>
		<spring.version>4.0.5.RELEASE</spring.version>
		<spring.security.version>3.2.6.RELEASE</spring.security.version>
		<hibernate.version>4.3.5.Final</hibernate.version>
		<jackson-version>2.3.0</jackson-version>
	</properties>

	<developers>
		<developer>
			<id>Varun Kumar</id>
			<email>varun@futuredoom.in</email>
			<organization>Bworks Pvt. Ltd.</organization>
			<organizationUrl>http://bworks.in</organizationUrl>
			<roles>
				<role>Java Developer</role>
			</roles>
			<timezone>+5:30</timezone>
		</developer>
	</developers>

	<repositories>

	</repositories>

	<build>
		<finalName>${pom.artifactId}</finalName>
		<resources>
			<resource>
				<directory>src/main/java</directory>
				<excludes>
					<exclude>**/*.java</exclude>
				</excludes>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<excludes>
					<exclude>**/*.java</exclude>
				</excludes>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<encoding>${project.build.sourceEncoding}</encoding>
					<source>${jdk.version}</source>
					<target>${jdk.version}</target>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
			<!-- <plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<id>Instrument domain classes</id>
						<configuration>
							<tasks>
								<taskdef name="instrument"
									classname="org.hibernate.tool.instrument.javassist.InstrumentTask">
									<classpath>
										<path refid="maven.dependency.classpath" />
										<path refid="maven.plugin.classpath" />
									</classpath>
								</taskdef>
								<instrument verbose="true">
									<fileset dir="${project.build.outputDirectory}">
										<include name="**/model/*.class" />
									</fileset>
								</instrument>
							</tasks>
						</configuration>
						<phase>process-classes</phase>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>org.hibernate</groupId>
						<artifactId>hibernate-core</artifactId>
						<version>${hibernate.version}</version>
					</dependency>
				</dependencies>
			</plugin>-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>install</id>
						<phase>install</phase>
						<goals>
							<goal>sources</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.1.1</version>
			</plugin>
			<plugin>
				<artifactId>maven-jar-plugin</artifactId>
				<executions>
					<execution>
						<id>jar-server</id>
						<phase>package</phase>
						<goals>
							<goal>jar</goal>
						</goals>
						<configuration>
							<classifier>classes</classifier>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- <plugin>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>9.0.5.v20130815</version>
				<configuration>
					<webAppConfig>
						<contextPath>/</contextPath>
					</webAppConfig>
					<scanIntervalSeconds>0</scanIntervalSeconds>
					- <jettyConfig>${project.basedir}/src/main/resources/config/jetty9.xml</jettyConfig> 
						<contextXml>${project.basedir}/src/test/resources/jetty-context.xml</contextXml> -
					<stopKey>STOP</stopKey>
					<stopPort>9999</stopPort>
					<jettyXml>${project.basedir}/src/main/resources/jetty.xml</jettyXml>
					<contextXml>${project.basedir}/src/main/resources/jetty-context.xml</contextXml>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>c3p0</groupId>
						<artifactId>c3p0</artifactId>
						<version>0.9.1.2</version>
					</dependency>
				</dependencies>
			</plugin>-->
			<plugin>  
			    <groupId>org.mortbay.jetty</groupId>  
			    <artifactId>jetty-maven-plugin</artifactId>  
			    <version>8.1.5.v20120716</version>  
			    <configuration>  
			        <scanIntervalSeconds>10</scanIntervalSeconds>  
			        <webapp>  
			            <contextPath>/oms</contextPath>  
			        </webapp>  
			        <useTestClasspath>true</useTestClasspath>  
			        <stopKey>foo</stopKey>  
			        <stopPort>9960</stopPort>  
			        <connectors>  
			            <connector implementation="org.eclipse.jetty.server.nio.SelectChannelConnector">  
			                <port>8090</port>  
			                <maxIdleTime>60000</maxIdleTime>  
			            </connector>  
			        </connectors>  
			    </configuration>  
			    <executions>  
			        <execution>  
			            <id>start-jetty</id>  
			            <phase>pre-integration-test</phase>  
			            <goals>  
			                <goal>run</goal>  
			            </goals>  
			            <configuration>  
			                <scanIntervalSeconds>0</scanIntervalSeconds>  
			                <daemon>true</daemon>  
			            </configuration>  
			        </execution>  
			        <execution>  
			            <id>stop-jetty</id>  
			            <phase>post-integration-test</phase>  
			            <goals>  
			                <goal>stop</goal>  
			            </goals>  
			        </execution>  
			    </executions>  
			</plugin>
			<plugin>
				<groupId>org.apache.tomcat.maven</groupId>
				<artifactId>tomcat7-maven-plugin</artifactId>
				<version>2.2</version>
				<configuration>
					<url>http://localhost/manager</url>
					<server>localhost</server>
					<path>/</path>
					<contextFile>src/main/resources/tomcat-context.xml</contextFile>
				</configuration>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.mojo
										</groupId>
										<artifactId>
											aspectj-maven-plugin
										</artifactId>
										<versionRange>
											[1.7,)
										</versionRange>
										<goals>
											<goal>test-compile</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<!-- Profiles start here -->
	<profiles>
		<profile>
			<id>dev</id>
			<!-- Dev profile is active by default -->
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<!-- Specifies the build profile id, which is used to find out the correct 
					properties file. This is not actually necessary for this example, but it 
					can be used for other purposes. -->
				<build.profile.id>dev</build.profile.id>
			</properties>
			<build>
				<filters>
					<!-- Specifies path to the properties file, which contains profile specific 
						configuration. In this case, the configuration file is searched from profiles/dev/ 
						directory. -->
					<filter>profiles/${build.profile.id}/database.properties</filter>
					<filter>profiles/${build.profile.id}/app.properties</filter>
				</filters>
				<resources>
					<!-- Placeholders found from files located in the configured resource 
						directories are replaced with values found from the profile specific configuration 
						files. -->
					<resource>
						<filtering>true</filtering>
						<directory>src/main/resources</directory>
						<!-- You can also include only specific files found from the configured 
							directory or exclude files. This can be done by uncommenting following sections 
							and adding the configuration under includes and excludes tags. -->
						<!-- <includes> <include></include> </includes> <excludes> <exclude></exclude> 
							</excludes> -->
					</resource>
				</resources>
			</build>
		</profile>
		<profile>
			<id>test</id>
			<properties>
				<!-- Specifies the build profile id, which is used to find out the correct 
					properties file. This is not actually necessary for this example, but it 
					can be used for other purposes. -->
				<build.profile.id>test</build.profile.id>
			</properties>
			<build>
				<filters>
					<!-- Specifies path to the properties file, which contains profile specific 
						configuration. In this case, the configuration file is searched from profiles/test/ 
						directory. -->
					<filter>profiles/${build.profile.id}/database.properties</filter>
					<filter>profiles/${build.profile.id}/app.properties</filter>
				</filters>
				<resources>
					<!-- Placeholders found from files located in the configured resource 
						directories are replaced with values found from the profile specific configuration 
						files. -->
					<resource>
						<filtering>true</filtering>
						<directory>src/main/resources</directory>
						<!-- You can also include only specific files found from the configured 
							directory or exclude files. This can be done by uncommenting following sections 
							and adding the configuration under includes and excludes tags. -->
						<!-- <includes> <include></include> </includes> <excludes> <exclude></exclude> 
							</excludes> -->
					</resource>
				</resources>
			</build>
		</profile>
		<profile>
			<id>prod</id>
			<properties>
				<!-- Specifies the build profile id, which is used to find out the correct 
					properties file. This is not actually necessary for this example, but it 
					can be used for other purposes. -->
				<build.profile.id>prod</build.profile.id>
			</properties>
			<build>
				<filters>
					<!-- Specifies path to the properties file, which contains profile specific 
						configuration. In this case, the configuration file is searched from profiles/prod/ 
						directory. -->
					<filter>profiles/${build.profile.id}/database.properties</filter>
					<filter>profiles/${build.profile.id}/app-platform.properties</filter>
					<filter>profiles/${build.profile.id}/istage-solr.properties</filter>
					<filter>profiles/${build.profile.id}/istage-mail.properties</filter>
					<filter>profiles/${build.profile.id}/istage-checkout-online-success.properties</filter>
					<filter>profiles/${build.profile.id}/istage-checkout-cod-success.properties</filter>
					<filter>profiles/${build.profile.id}/istage-barcode.properties</filter>
				</filters>
				<resources>
					<!-- Placeholders found from files located in the configured resource 
						directories are replaced with values found from the profile specific configuration 
						files. -->
					<resource>
						<filtering>true</filtering>
						<directory>src/main/resources</directory>
						<!-- You can also include only specific files found from the configured 
							directory or exclude files. This can be done by uncommenting following sections 
							and adding the configuration under includes and excludes tags. -->
						<!-- <includes> <include></include> </includes> <excludes> <exclude></exclude> 
							</excludes> -->
					</resource>
				</resources>
			</build>
		</profile>
	</profiles>

	<dependencies>
		<!-- APACHE COMMONS LIBRARIES -->
		<dependency>
			<groupId>commons-validator</groupId>
			<artifactId>commons-validator</artifactId>
			<version>1.3.1</version>
			<exclusions>
				<exclusion>
					<artifactId>commons-logging</artifactId>
					<groupId>commons-logging</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>commons-beanutils</groupId>
			<artifactId>commons-beanutils</artifactId>
			<version>1.8.0</version>
			<exclusions>
				<exclusion>
					<artifactId>commons-logging</artifactId>
					<groupId>commons-logging</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>commons-chain</groupId>
			<artifactId>commons-chain</artifactId>
			<version>1.2</version>
		</dependency>
		<dependency>
			<groupId>commons-discovery</groupId>
			<artifactId>commons-discovery</artifactId>
			<version>0.2</version>
			<exclusions>
				<exclusion>
					<artifactId>commons-logging</artifactId>
					<groupId>commons-logging</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>1.5</version>
		</dependency>
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>1.2.2</version>
		</dependency>
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>2.4</version>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.4</version>
		</dependency>
		<dependency>
			<groupId>commons-pool</groupId>
			<artifactId>commons-pool</artifactId>
			<version>1.3</version>
		</dependency>
		<dependency>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
			<version>3.2</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-collections4</artifactId>
			<version>4.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.1</version>
		</dependency>
		<dependency>
			<groupId>commons-digester</groupId>
			<artifactId>commons-digester</artifactId>
			<version>2.0</version>
			<exclusions>
				<exclusion>
					<artifactId>commons-logging</artifactId>
					<groupId>commons-logging</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>commons-configuration</groupId>
			<artifactId>commons-configuration</artifactId>
			<version>1.7</version>
			<exclusions>
				<exclusion>
					<artifactId>commons-logging</artifactId>
					<groupId>commons-logging</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>commons-dbcp</groupId>
			<artifactId>commons-dbcp</artifactId>
			<version>1.4</version>
		</dependency>

		<!-- LOGGING LIBRARIES -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-1.2-api</artifactId>
			<version>2.0.2</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.1</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>1.7.1</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.7.1</version>
		</dependency>
		<dependency>
			<groupId>logkit</groupId>
			<artifactId>logkit</artifactId>
			<version>20020529</version>
		</dependency>

		<!-- Spring -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<!-- Spring Security -->
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-core</artifactId>
			<version>${spring.security.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
			<version>${spring.security.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
			<version>${spring.security.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-taglibs</artifactId>
			<version>3.2.0.RELEASE</version>
		</dependency>
		

		<!-- Hibernate -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
			<version>${hibernate.version}</version>
		</dependency>

		<dependency>
			<groupId>org.skywaysoftware</groupId>
			<artifactId>skyway-spring-utils</artifactId>
			<version>7.1.3</version>
			<exclusions>
				<exclusion>
					<artifactId>*</artifactId>
					<groupId>*</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- SERVLET LIBRARIES -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>3.0-alpha-1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>jsp-api</artifactId>
			<version>2.2</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>jstl</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>
		<!-- Spring tiles -->
		<dependency>
			<groupId>org.apache.tiles</groupId>
			<artifactId>tiles-servlet</artifactId>
			<version>3.0.3</version>
		</dependency>
		<dependency>
			<groupId>org.apache.tiles</groupId>
			<artifactId>tiles-core</artifactId>
			<version>3.0.3</version>
		</dependency>
		<dependency>
			<groupId>org.apache.tiles</groupId>
			<artifactId>tiles-jsp</artifactId>
			<version>3.0.3</version>
		</dependency>
		<dependency>
			<groupId>org.apache.tiles</groupId>
			<artifactId>tiles-template</artifactId>
			<version>3.0.3</version>
		</dependency>
		<dependency>
			<groupId>taglibs</groupId>
			<artifactId>standard</artifactId>
			<version>1.1.2</version>
		</dependency>
		<!-- Database Connectors -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.6</version>
		</dependency>

		<!-- JSON LIBRARIES -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
			<version>${jackson-version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
			<version>${jackson-version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>${jackson-version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-hibernate3</artifactId>
			<version>${jackson-version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-hibernate4</artifactId>
			<version>${jackson-version}</version>
		</dependency>

		<!-- Testing Libraries -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.7</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<artifactId>hamcrest-core</artifactId>
					<groupId>org.hamcrest</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- Misc -->
		<dependency>
			<groupId>io.github.benas</groupId>
			<artifactId>jpopulator</artifactId>
			<version>1.1.0</version>
		</dependency>
		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
			<version>1.1.0.Final</version>
		</dependency>
	</dependencies>
</project>
